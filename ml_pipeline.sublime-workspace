{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"ke",
				"kernel_size"
			],
			[
				"n",
				"n_resgroups"
			],
			[
				"n_res",
				"n_resblocks"
			],
			[
				"model_",
				"model_term_expanded\tstatement"
			],
			[
				"beta",
				"beta_squared\tstatement"
			],
			[
				"acc",
				"acc_data"
			],
			[
				"phase",
				"phase_img"
			],
			[
				"data_sor",
				"data_sorted"
			],
			[
				"rand",
				"randint\tfunction"
			],
			[
				"float",
				"float32\tstatement"
			],
			[
				"middle",
				"middle_attention\tstatement"
			],
			[
				"i",
				"i_crop2\tstatement"
			],
			[
				"fft",
				"fft2c\tfunction"
			],
			[
				"complex",
				"complex_support\tparam"
			],
			[
				"comle",
				"complex_support\tstatement"
			],
			[
				"comple",
				"complex_support"
			],
			[
				"return",
				"return_max"
			],
			[
				"split",
				"split_1\tstatement"
			],
			[
				"add",
				"add_entry\tfunction"
			],
			[
				"V",
				"VarNetBlock\tclass"
			],
			[
				"normalie",
				"normalize_kspace\tmodule"
			],
			[
				"norm",
				"norm_dim\tstatement"
			],
			[
				"FL",
				"FLAIR_1\tstatement"
			],
			[
				"pat",
				"patient\tstatement"
			],
			[
				"mask",
				"masked_kspace\tstatement"
			],
			[
				"Bat",
				"BatchNorm2d\tclass"
			],
			[
				"coil",
				"coil_kspace\tstatement"
			],
			[
				"sense",
				"sense_maps\tstatement"
			],
			[
				"image",
				"image_to_kspace\tstatement"
			],
			[
				"coil_",
				"coil_kspace\tstatement"
			],
			[
				"BiP",
				"BiFPN_layers\tparam"
			],
			[
				"cal",
				"calculate_sense\tfunction"
			],
			[
				"comp",
				"complex_img\tstatement"
			],
			[
				"crop",
				"crop_size\tparam"
			],
			[
				"tensor",
				"tensor_dtype\tstatement"
			],
			[
				"final",
				"final_bottle\tstatement"
			],
			[
				"down",
				"down4\tstatement"
			],
			[
				"in",
				"in_channels\tparam"
			],
			[
				"out",
				"out_2\tstatement"
			],
			[
				"out_chan",
				"out_channel_norm\tstatement"
			],
			[
				"up",
				"up3\tstatement"
			],
			[
				"up3_chann",
				"up3_channel_norm\tstatement"
			],
			[
				"down2",
				"down2_basic\tstatement"
			],
			[
				"down1",
				"down1_norm\tstatement"
			],
			[
				"input",
				"input_conv\tstatement"
			],
			[
				"S",
				"Sequential\tclass"
			],
			[
				"do",
				"downsample\tstatement"
			],
			[
				"device",
				"device_ids\tstatement"
			],
			[
				"BiFPN",
				"BiFPN_layers\tparam"
			],
			[
				"Module",
				"ModuleList\tclass"
			],
			[
				"Insta",
				"InstanceNorm2d\tclass"
			],
			[
				"Model",
				"ModelContainer\tclass"
			],
			[
				"mode",
				"model_entry\tmodule"
			],
			[
				"data",
				"dataset_container"
			],
			[
				"model",
				"model_description"
			],
			[
				"int",
				"int16\tmodule"
			],
			[
				"str",
				"start\tstatement"
			],
			[
				"m",
				"min_validation_loss\tstatement"
			],
			[
				"min_val",
				"min_validation_loss\tstatement"
			],
			[
				"min",
				"min_val_loss\tstatement"
			],
			[
				"val",
				"val_loss\tstatement"
			],
			[
				"n_",
				"n_repeats\tparam"
			],
			[
				"Basic",
				"BasicBlock\tclass"
			],
			[
				"basi",
				"basic_up1\tstatement"
			],
			[
				"new",
				"new_mbdown\tstatement"
			],
			[
				"u",
				"up_mbblocks\tstatement"
			],
			[
				"bloc",
				"block_args\tstatement"
			],
			[
				"dow",
				"down_block\tstatement"
			],
			[
				"block",
				"block_args\tstatement"
			],
			[
				"blc",
				"block_args\tstatement"
			],
			[
				"Modu",
				"ModuleList\tclass"
			],
			[
				"bl",
				"block_num\tstatement"
			],
			[
				"Mod",
				"ModuleList\tclass"
			],
			[
				"Ins",
				"InstanceNorm2d\tclass"
			],
			[
				"in_",
				"in_channels_efficient\tstatement"
			],
			[
				"bottle",
				"bottle_up3\tstatement"
			],
			[
				"bot",
				"bottle_up2\tstatement"
			],
			[
				"bott",
				"bottle_up1\tstatement"
			],
			[
				"I",
				"InstanceNorm2d\tclass"
			],
			[
				"get",
				"get_same_padding_conv2d\tfunction"
			],
			[
				"Bas",
				"BasicUpBlock\tclass"
			],
			[
				"basic",
				"basic_upblock\tmodule"
			],
			[
				"Maxp",
				"MaxPool2d\tclass"
			],
			[
				"id",
				"identity\tstatement"
			],
			[
				"se",
				"se_reduce\tstatement"
			],
			[
				"Sq",
				"SqueezeExcitation\tclass"
			],
			[
				"dilation",
				"dilation=\tparam"
			],
			[
				"Conv",
				"Conv2d\tclass"
			],
			[
				"s",
				"squeeze_excitation\tmodule"
			],
			[
				"Avg",
				"AvgPool2d\tclass"
			],
			[
				"eff",
				"efficientnet_autoencoder\tmodule"
			],
			[
				"blo",
				"block_args\tstatement"
			],
			[
				"mb",
				"mbconvblock_transpose\tmodule"
			],
			[
				"get_",
				"get_same_padding_transpose2d\tfunction"
			],
			[
				"Nn",
				"None\tkeyword"
			],
			[
				"globa",
				"global_params\tstatement"
			],
			[
				"global",
				"global_params\tparam"
			],
			[
				"blocks",
				"blocks_args\tparam"
			],
			[
				"pad",
				"pad_h\tstatement"
			],
			[
				"blok",
				"block_args\tparam"
			],
			[
				"batch_no",
				"batch_norm_epsilon\tstatement"
			],
			[
				"bat",
				"batch_norm_epsilon\tstatement"
			],
			[
				"Block",
				"BlockArgs\tclass"
			],
			[
				"expand",
				"expand_ratio\tstatement"
			],
			[
				"glo",
				"global_params\tstatement"
			],
			[
				"abs",
				"absolute\tfunction"
			],
			[
				"typ",
				"typing\tmodule"
			],
			[
				"list",
				"list_ids\tstatement"
			],
			[
				"lis",
				"list_ids\tstatement"
			],
			[
				"to",
				"to_tensor\tfunction"
			],
			[
				"from",
				"from_numpy\tfunction"
			],
			[
				"for",
				"forward"
			],
			[
				"normal",
				"normalize=\tparam"
			],
			[
				"overwr",
				"overwrite_input=\tparam"
			],
			[
				"threa",
				"threads=\tparam"
			],
			[
				"tr",
				"truth_transform\tparam"
			],
			[
				"save",
				"save_compressed\tfunction"
			],
			[
				"pare",
				"parents=\tparam"
			],
			[
				"valid",
				"valid_loader\tstatement"
			],
			[
				"mult",
				"multichannel=\tparam"
			],
			[
				"iter",
				"iterations\tstatement"
			],
			[
				"f",
				"filename\tstatement"
			],
			[
				"exi",
				"exist_ok=\tparam"
			],
			[
				"metr",
				"metric\tstatement"
			],
			[
				"re",
				"resume_metric"
			],
			[
				"resume",
				"resume_model"
			],
			[
				"trai",
				"train_transforms\tstatement"
			],
			[
				"sub",
				"subsamples\tstatement"
			]
		]
	},
	"buffers":
	[
		{
			"file": "crainet/models/blocks/squeeze_excitation.py",
			"redo_stack":
			[
				[
					83,
					1,
					"left_delete",
					null,
					"AQAAAOUDAAAAAAAABwUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA5QMAAAAAAADlAwAAAAAAAAAAAAAAAPC/"
				]
			],
			"settings":
			{
				"buffer_size": 1489,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					14,
					1,
					"insert",
					{
						"characters": "torch."
					},
					"BwAAADsEAAAAAAAAPAQAAAAAAAAAAAAAPAQAAAAAAAA8BAAAAAAAABQAAABNZW1vcnlFZmZpY2llbnRTd2lzaDwEAAAAAAAAPQQAAAAAAAAAAAAAPQQAAAAAAAA+BAAAAAAAAAAAAAA+BAAAAAAAAD8EAAAAAAAAAAAAAD8EAAAAAAAAQAQAAAAAAAAAAAAAQAQAAAAAAABBBAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAOwQAAAAAAABPBAAAAAAAAAAAAAAAAPC/"
				],
				[
					16,
					1,
					"insert",
					{
						"characters": "nn.SiLU"
					},
					"BwAAAEEEAAAAAAAAQgQAAAAAAAAAAAAAQgQAAAAAAABDBAAAAAAAAAAAAABDBAAAAAAAAEQEAAAAAAAAAAAAAEQEAAAAAAAARQQAAAAAAAAAAAAARQQAAAAAAABGBAAAAAAAAAAAAABGBAAAAAAAAEcEAAAAAAAAAAAAAEcEAAAAAAAASAQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAQQQAAAAAAABBBAAAAAAAAAAAAAAAAPC/"
				],
				[
					33,
					1,
					"left_delete",
					null,
					"AQAAAEgAAAAAAAAASAAAAAAAAABlAAAAZnJvbSBiYWJ5amVzdXMubW9kZWxzLmVmZmljaWVudG5ldC5ibG9ja3Muc3dpc2ggaW1wb3J0ICgKICAgIFN3aXNoLAogICAgTWVtb3J5RWZmaWNpZW50U3dpc2gsCiAgICApCgo",
					"AQAAAAAAAAABAAAArQAAAAAAAABIAAAAAAAAAAAAAAAAAPC/"
				],
				[
					35,
					1,
					"left_delete",
					null,
					"AQAAAEcAAAAAAAAARwAAAAAAAAABAAAACg",
					"AQAAAAAAAAABAAAASAAAAAAAAABIAAAAAAAAAAAAAAAAAPC/"
				],
				[
					37,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAEcAAAAAAAAASAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAARwAAAAAAAABHAAAAAAAAAAAAAAAAAPC/"
				],
				[
					44,
					1,
					"left_delete",
					null,
					"AQAAANQFAAAAAAAA1AUAAAAAAABKAQAAICAgIGRlZiBzZXRfc3dpc2goc2VsZiwgbWVtb3J5X2VmZmljaWVudD1UcnVlKToKICAgICAgICAiIiJTZXRzIHN3aXNoIGZ1bmN0aW9uIGFzIG1lbW9yeSBlZmZpY2llbnQgKGZvciB0cmFpbmluZykgb3Igc3RhbmRhcmQgKGZvciBleHBvcnQpLgogICAgICAgIEFyZ3M6CiAgICAgICAgICAgIG1lbW9yeV9lZmZpY2llbnQgKGJvb2wpOiBXaGV0aGVyIHRvIHVzZSBtZW1vcnktZWZmaWNpZW50IHZlcnNpb24gb2Ygc3dpc2guCiAgICAgICAgIiIiCiAgICAgICAgc2VsZi5zd2lzaCA9IE1lbW9yeUVmZmljaWVudFN3aXNoKCkgaWYgbWVtb3J5X2VmZmljaWVudCBlbHNlIFN3aXNoKCkK",
					"AQAAAAAAAAABAAAAHgcAAAAAAADUBQAAAAAAAAAAAAAAAPC/"
				],
				[
					46,
					1,
					"left_delete",
					null,
					"AQAAANMFAAAAAAAA0wUAAAAAAAABAAAACg",
					"AQAAAAAAAAABAAAA1AUAAAAAAADUBQAAAAAAAAAAAAAAAPC/"
				],
				[
					48,
					1,
					"left_delete",
					null,
					"AQAAANIFAAAAAAAA0gUAAAAAAAABAAAACg",
					"AQAAAAAAAAABAAAA0wUAAAAAAADTBQAAAAAAAAAAAAAAAPC/"
				],
				[
					52,
					1,
					"ensure_newline_at_eof",
					null,
					"AQAAANIFAAAAAAAA0wUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA0gUAAAAAAADSBQAAAAAAAAAAAAAAAPC/"
				],
				[
					57,
					1,
					"insert",
					{
						"characters": "silu"
					},
					"BQAAAM4DAAAAAAAAzwMAAAAAAAAAAAAAzwMAAAAAAADPAwAAAAAAAAUAAABzd2lzaM8DAAAAAAAA0AMAAAAAAAAAAAAA0AMAAAAAAADRAwAAAAAAAAAAAADRAwAAAAAAANIDAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAzgMAAAAAAADTAwAAAAAAAAAAAAAAAPC/"
				],
				[
					68,
					1,
					"insert",
					{
						"characters": "sil"
					},
					"BAAAAHYFAAAAAAAAdwUAAAAAAAAAAAAAdwUAAAAAAAB3BQAAAAAAAAUAAABzd2lzaHcFAAAAAAAAeAUAAAAAAAAAAAAAeAUAAAAAAAB5BQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAdgUAAAAAAAB7BQAAAAAAAAAAAAAAAPC/"
				],
				[
					71,
					1,
					"insert",
					{
						"characters": "u"
					},
					"AQAAAHkFAAAAAAAAegUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAeQUAAAAAAAB5BQAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "crainet/models/blocks/BiFPN/BiFPN.py",
			"settings":
			{
				"buffer_size": 10479,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"json",
				"Pretty JSON: Format (Pretty Print) JSON"
			],
			[
				"prett",
				"Pretty JSON: Format (Pretty Print) JSON"
			],
			[
				"JSO",
				"Pretty JSON: Format (Pretty Print) JSON"
			],
			[
				"jso",
				"Pretty JSON: Format (Pretty Print) JSON"
			],
			[
				"lint",
				"SublimeLinter: Reload SublimeLinter and its Plugins"
			],
			[
				"pa",
				"Package Control: Advanced Install Package"
			],
			[
				"",
				"Preferences: Browse Packages"
			],
			[
				"Package Control: ",
				"Package Control: List Packages"
			],
			[
				"Prefere",
				"Preferences: Settings"
			],
			[
				"packa",
				"View Package File"
			],
			[
				"Pack",
				"Package Control: Advanced Install Package"
			],
			[
				"Install",
				"Install Package Control"
			]
		],
		"width": 0.0
	},
	"console":
	{
		"height": 0.0,
		"history":
		[
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/home/jon/Documents/CRAI/babyjesus",
		"/home/jon/Documents/CRAI/babyjesus/crainet",
		"/home/jon/Documents/CRAI/babyjesus/crainet/models",
		"/home/jon/Documents/CRAI/babyjesus/crainet/models/blocks"
	],
	"file_history":
	[
		"/home/jon/Documents/CRAI/babyjesus/crainet/models/efficientnet/blocks/basic_upblock.py",
		"/home/jon/Documents/CRAI/babyjesus/crainet/models/efficientnet/blocks/swish.py",
		"/home/jon/Documents/CRAI/babyjesus/crainet/models/efficientnet/blocks/__init__.py",
		"/home/jon/Documents/CRAI/babyjesus/crainet/base/trainer_base.py",
		"/home/jon/Documents/CRAI/babyjesus/crainet/trainer/trainer.py",
		"/home/jon/Documents/CRAI/babyjesus/crainet/config/logger.py",
		"/home/jon/Documents/CRAI/babyjesus/crainet/essentials/metrics.py",
		"/home/jon/Documents/CRAI/babyjesus/crainet/essentials/multi_loss.py",
		"/home/jon/Documents/CRAI/babyjesus/crainet/essentials/multi_metric.py",
		"/home/jon/Documents/CRAI/babyjesus/crainet/essentials/multi_tracker.py",
		"/home/jon/Documents/CRAI/babyjesus/babyjesus/models/efficientnet/efficientnet.py",
		"/home/jon/Documents/CRAI/babyjesus/testing/test_efficientnet.py",
		"/home/jon/Documents/CRAI/babyjesus/babyjesus/models/efficientnet/utils.py",
		"/home/jon/Documents/CRAI/babyjesus/babyjesus/models/efficientnet/config.py",
		"/home/jon/Documents/CRAI/babyjesus/babyjesus/models/efficientnet/__init__.py",
		"/home/jon/Documents/CRAI/babyjesus/test.py",
		"/home/jon/Documents/CRAI/babyjesus/pyproject.toml",
		"/home/jon/Documents/CRAI/babyjesus/.gitignore",
		"/home/jon/Documents/CRAI/fMRI/fMRI/models/reconstruction/HAN/common.py",
		"/home/jon/Documents/CRAI/fMRI/fMRI/models/reconstruction/ResUNet/repeated_bifpn_resunet.py",
		"/home/jon/Documents/CRAI/fMRI/fMRI/models/blocks/basicblock.py",
		"/home/jon/Documents/CRAI/fMRI/fMRI/models/blocks/__init__.py",
		"/home/jon/Documents/CRAI/fMRI/fMRI/models/reconstruction/VarNet/skip_sense_varnet.py",
		"/home/jon/Documents/CRAI/fMRI/fMRI/models/blocks/lstm_cell.py",
		"/home/jon/Documents/CRAI/fMRI/fMRI/dataset/phase_loader.py",
		"/home/jon/Documents/CRAI/fMRI/fMRI/models/reconstruction/ULSTMNet/decoder.py",
		"/home/jon/Documents/CRAI/fMRI/fMRI/dataset/datasetentry.py",
		"/home/jon/Documents/CRAI/fMRI/fMRI/trainer/phase_trainer.py",
		"/home/jon/Documents/CRAI/fMRI/fMRI/preprocessing/crop_image.py",
		"/home/jon/Documents/CRAI/fMRI/fMRI/models/blocks/mbconvblock.py",
		"/home/jon/Documents/CRAI/Projects/Longitudinal_Glioblastoma/project.json",
		"/home/jon/Documents/CRAI/fMRI/fMRI/preprocessing/downsample_fov.py",
		"/home/jon/Documents/CRAI/fMRI/fMRI/preprocessing/accm/accm.py",
		"/home/jon/Documents/CRAI/fMRI/fMRI/dataset/dataset_converter.py",
		"/home/jon/Documents/CRAI/fMRI/fMRI/dataset/datasetcontainer.py",
		"/home/jon/Documents/CRAI/fMRI/fMRI/dataset/datasetloader.py",
		"/home/jon/Documents/CRAI/fMRI/fMRI/preprocessing/kspace_roll.py",
		"/home/jon/Documents/CRAI/fMRI/fMRI/masks/kspace_subsampling_mask.py",
		"/home/jon/Documents/CRAI/fMRI/fMRI/models/reconstruction/PhaseVarNet/ffts.py",
		"/home/jon/Documents/CRAI/fMRI/fMRI/models/reconstruction/PhaseVarNet/varnet.py",
		"/home/jon/Documents/CRAI/fMRI/fMRI/dataset/datasetinfo.py",
		"/home/jon/Documents/CRAI/fMRI/fMRI/trainer/__init__.py",
		"/home/jon/Documents/CRAI/fMRI/fMRI/preprocessing/normalize_kspace.py",
		"/home/jon/Documents/CRAI/fMRI/fMRI/base/base_trainer.py",
		"/home/jon/Documents/CRAI/fMRI/fMRI/trainer/trainer.py",
		"/home/jon/Documents/CRAI/fMRI/fMRI/preprocessing/accm/dft2.py",
		"/home/jon/Documents/CRAI/fMRI/fMRI/preprocessing/accm/dft.py",
		"/home/jon/Documents/CRAI/fMRI/fMRI/preprocessing/accm/__init__.py",
		"/home/jon/Documents/CRAI/fMRI/fMRI/dataset/__init__.py",
		"/home/jon/Documents/CRAI/fMRI/fMRI/fastmri/math.py",
		"/home/jon/Documents/CRAI/fMRI/fMRI/fastmri/coil_combine.py",
		"/home/jon/Documents/CRAI/fMRI/fMRI/models/reconstruction/PhaseVarNet/__init__.py",
		"/home/jon/Documents/CRAI/fMRI/fMRI/preprocessing/phase_image.py",
		"/home/jon/Documents/CRAI/fMRI/fMRI/models/reconstruction/VarNet/varnet.py",
		"/home/jon/Documents/CRAI/fMRI/fMRI/fastmri/fftc.py",
		"/home/jon/Documents/CRAI/fMRI/fMRI/models/blocks/bottleneck.py",
		"/home/jon/Documents/CRAI/fMRI/fMRI/models/reconstruction/PhaseVarNet/varnet_fftc.py",
		"/home/jon/Documents/CRAI/fMRI/fMRI/preprocessing/accm/ffts.py",
		"/home/jon/Documents/CRAI/phase/test.m",
		"/home/jon/Documents/CRAI/phase/accm.m",
		"/home/jon/Documents/CRAI/phase/fermi2d.m",
		"/home/jon/Documents/CRAI/phase/dft2.m",
		"/home/jon/Documents/CRAI/phase/dft.m",
		"/home/jon/Documents/CRAI/phase/MRE_preprocessing_pipeline.m",
		"/home/jon/Documents/CRAI/fMRI/fMRI/preprocessing/kspace_to_image.py",
		"/home/jon/Documents/CRAI/fMRI/fMRI/preprocessing/image_to_kspace.py",
		"/home/jon/Documents/CRAI/fMRI/fMRI/preprocessing/acc/dft2.py",
		"/home/jon/Documents/CRAI/fMRI/fMRI/preprocessing/acc/dft.py",
		"/home/jon/Documents/CRAI/fMRI/fMRI/preprocessing/acc/fermi2d.py",
		"/home/jon/Documents/CRAI/fMRI/fMRI/preprocessing/acc/accm.py",
		"/home/jon/Documents/CRAI/fMRI/fMRI/preprocessing/acc/__init__.py",
		"/home/jon/Documents/CRAI/fMRI/fMRI/models/__init__.py",
		"/home/jon/Documents/CRAI/fMRI/fMRI/models/efficientnet/efficientnet.py",
		"/home/jon/Documents/CRAI/fMRI/fMRI/models/multi_loss.py",
		"/home/jon/Documents/CRAI/fMRI/fMRI/models/multi_metric.py",
		"/home/jon/Documents/CRAI/fMRI/fMRI/preprocessing/acc/ffts.py",
		"/home/jon/Documents/CRAI/fMRI/fMRI/models/reconstruction/VarNet/original_varnet.py",
		"/home/jon/Documents/CRAI/phase/ge_to_kspace.m",
		"/home/jon/Documents/CRAI/fMRI/fMRI/models/blocks/utils/conv_pad.py",
		"/home/jon/Documents/CRAI/fMRI/fMRI/models/blocks/basic_upblock.py",
		"/home/jon/Documents/CRAI/fMRI/fMRI/preprocessing/z_normalization.py",
		"/home/jon/Documents/CRAI/fMRI/fMRI/models/reconstruction/UNet/RELU/relu_unet.py",
		"/home/jon/Documents/CRAI/fMRI/fMRI/models/reconstruction/UNet/RELU/unet_blocks.py",
		"/home/jon/Documents/CRAI/fMRI/fMRI/models/blocks/BiFPN/BiFPN.py",
		"/home/jon/Documents/CRAI/fMRI/fMRI.sublime-project",
		"/home/jon/Documents/CRAI/fMRI/fMRI/preprocessing/apply_mask.py",
		"/home/jon/Documents/CRAI/fMRI/fMRI/models/efficientnet/config.py",
		"/home/jon/Documents/CRAI/fMRI/fMRI/preprocessing/acc.py",
		"/home/jon/Documents/CRAI/fMRI/fMRI/models/reconstruction/losses/SSIMLoss.py",
		"/home/jon/Downloads/accm.m",
		"/home/jon/Downloads/MRE_preprocessing_pipeline(1).m",
		"/home/jon/Documents/CRAI/fMRI/train.py",
		"/home/jon/Documents/CRAI/fMRI/fMRI/logger.py",
		"/home/jon/Documents/CRAI/fMRI/fMRI/config/models/UNet/template.json",
		"/home/jon/Documents/CRAI/fMRI/fMRI/config/config_reader.py",
		"/home/jon/Documents/CRAI/fMRI/fMRI/evaluate.py",
		"/home/jon/Documents/CRAI/fMRI/test_files/fMRI_dataset_processing.py",
		"/home/jon/Documents/CRAI/fMRI/test_files/testing2.py",
		"/home/jon/Documents/CRAI/fMRI/test_files/extract_from_zip_testing.py",
		"/home/jon/Documents/CRAI/fMRI/fMRI/metrics/metrics.py",
		"/home/jon/Documents/CRAI/fMRI-training/model_evaluation/varnet/varnet.json",
		"/home/jon/Documents/CRAI/fMRI-training/model_evaluation/varnet/hdd_test.json",
		"/home/jon/Documents/CRAI/fMRI/fMRI/models/efficientnet/efficientnet_autoencoder.py",
		"/home/jon/Documents/CRAI/fMRI/fMRI/models/efficientnet/utils.py",
		"/home/jon/Documents/CRAI/fMRI/fMRI/models/blocks/squeeze_excitation.py",
		"/home/jon/Documents/CRAI/fMRI/fMRI/reconstruction/deep_reconstruction.py",
		"/home/jon/Documents/CRAI/fMRI/fMRI/models/reconstruction/VarNet/unet.py",
		"/home/jon/Documents/CRAI/fMRI/fMRI/models/model_container.py",
		"/home/jon/Documents/CRAI/fMRI/fMRI/models/model_entry.py",
		"/home/jon/Documents/CRAI/fMRI/fMRI/models/blocks/swish.py",
		"/home/jon/Documents/CRAI/fMRI/fMRI/reconstruction/bart_reconstruction.py",
		"/home/jon/Documents/CRAI/fMRI/fMRI/metrics/nmse.py",
		"/home/jon/Documents/CRAI/fMRI/fMRI/models/reconstruction/losses/FSSIM.py",
		"/home/jon/Documents/CRAI/fMRI/fMRI/fastmri/__init__.py",
		"/home/jon/Documents/CRAI/fMRI/fMRI/models/reconstruction/VarNet/varnet_fftc.py",
		"/home/jon/Documents/CRAI/fMRI/fMRI/preprocessing/complex_absolute.py",
		"/home/jon/Documents/CRAI/fMRI/fMRI/preprocessing/complex_numpy_to_tensor.py",
		"/home/jon/Documents/CRAI/fMRI/fMRI/preprocessing/complex_split.py",
		"/home/jon/Documents/CRAI/fMRI/fMRI/preprocessing/pad_kspace.py",
		"/home/jon/Documents/CRAI/fMRI/fMRI/preprocessing/rss.py",
		"/home/jon/Documents/CRAI/fMRI/fMRI/preprocessing/normalize.py",
		"/home/jon/Documents/CRAI/fMRI/fMRI/preprocessing/np_downsample_fov.py",
		"/home/jon/Documents/CRAI/fMRI/fMRI/preprocessing/__init__.py",
		"/home/jon/Documents/CRAI/fMRI/fMRI/preprocessing/fastmri/math.py",
		"/home/jon/Documents/CRAI/fMRI/fMRI/models/reconstruction/VarNet/fastmri/fftc.py",
		"/home/jon/Documents/CRAI/fMRI/fMRI/preprocessing/fastmri/__init__.py",
		"/home/jon/Documents/CRAI/fMRI/fMRI/models/reconstruction/VarNet/phase_varnet.py",
		"/home/jon/Documents/CRAI/fMRI/fMRI/models/reconstruction/VarNet/fastmri/__init__.py"
	],
	"find":
	{
		"height": 41.0
	},
	"find_in_files":
	{
		"height": 120.0,
		"where_history":
		[
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"Swish",
			"swish",
			"modelfile",
			"val_loss",
			"babyjesus"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
		],
		"reverse": false,
		"scrollbar_highlights": true,
		"show_context": true,
		"use_buffer2": true,
		"use_gitignore": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"sheets":
			[
				{
					"buffer": 0,
					"file": "crainet/models/blocks/squeeze_excitation.py",
					"selected": true,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1489,
						"regions":
						{
						},
						"selection":
						[
							[
								950,
								950
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										959,
										960
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/round_bracket.png",
										"region.yellowish"
									]
								},
								"open":
								{
									"1":
									[
										781,
										782
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content"
							],
							"git_gutter_is_enabled": true,
							"show_definitions": false,
							"syntax": "Packages/Python/Python.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 44.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "crainet/models/blocks/BiFPN/BiFPN.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 10479,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content"
							],
							"git_gutter_is_enabled": true,
							"show_definitions": false,
							"syntax": "Packages/Python/Python.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"stack_multiselect": false,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 29.0
	},
	"input":
	{
		"height": 46.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.SublimeLinter":
	{
		"height": 0.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"output.mdpopups":
	{
		"height": 0.0
	},
	"pinned_build_system": "",
	"project": "ml_pipeline.sublime-project",
	"replace":
	{
		"height": 54.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"",
				"fMRI/dataset/datasetloader.py"
			],
			[
				"git",
				".gitignore"
			],
			[
				"datase",
				"evil/dataset_source_provider.py"
			],
			[
				"str",
				"evil/struct/struct_base.py"
			],
			[
				"fixtdete",
				"test/fixtures/detection.py"
			],
			[
				"annot",
				"evil/annotation_entry.py"
			],
			[
				"test_ann",
				"test/test_annotation_container.py"
			],
			[
				"video_cont",
				"evil/container_generators/video_container.py"
			],
			[
				"dataset",
				"evil/dataset_source_provider.py"
			],
			[
				"raise",
				"evil/datastructures/annotation_source.py"
			],
			[
				"json",
				"evil/json_parser.py"
			],
			[
				"down",
				"tutorial/video_download.py"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"",
				"~/Documents/CRAI/fMRI-training/fMRI-training.sublime-project"
			],
			[
				"entr",
				"~/Documents/Epigram/bbox/bbox.sublime-project"
			]
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 392.0,
		"last_filter": "mer",
		"selected_items":
		[
			[
				"mer",
				"merge"
			]
		],
		"width": 592.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": true,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 279.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
